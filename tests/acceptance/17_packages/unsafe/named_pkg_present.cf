#name: Add named package
#priority: Blocker
#execution_schema: after_each_build     [after_each_build|after_XXX_module_change|during_stress_tests|during_release_tests...]
#status: ACTIVE   [ACTIVE|DEPRECATED|WAITING_FOR_REVIEW]
#story-id: 5513
#platform: debian_6, debian_7, centos_5, centos_6, rhel_5, rhel_6
#covering: fix_operational_repaired, fix_operational_kept

# TODO: Add compliance logging check

body common control
{
      inputs => {
                 "../../default.cf.sub",
                  "../../../../lib/3.6/packages.cf",
                  "packages-info.cf.sub",
                };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
      cache_system_functions => "no";
}



#######################################################

bundle agent init
{
  methods:
    "clear_packages" usebundle => clear_packages;
}

#######################################################

bundle agent test
{
    vars:
        "package_name" string => "$(p.name[3])";

    methods:
         "package_name" usebundle => package_present("(package_name)");
          classes => test_set_class("first_kept", "first_repaired", "first_notkept");

         "package_name" usebundle => package_present("(package_name)");
          classes => test_set_class("second_kept", "second_repaired", "second_notkept");
}



body classes test_set_class(kept, repaired, notkept)
{
    promise_kept => { "$(kept)" };
    promise_repaired => { "$(repaired)" };
    repair_failed => { "$(notkept)" };
}

#######################################################

bundle agent check
{

    classes:

        redhat::
            "has_pkg" expression => returnszero("/bin/rpm -q $(test.package_name) > /dev/null", "useshell");

        debian::
            "has_pkg" expression => returnszero("dpkg -l | grep ' $(test.package_name) ' > /dev/null", "useshell");

        any::
            "has_file" expression => fileexists("$(p.file[3][$(p.latest_version)])");
            "ok" expression => "first_repaired.!first_kept.!first_notkept.second_kept.!second_repaired.!second_notkept.has_pkg.has_file";


    reports:
        ok::
            "$(this.promise_filename) Pass";
        !ok::
            "$(this.promise_filename) FAIL";
}
